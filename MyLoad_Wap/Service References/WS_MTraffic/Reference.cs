//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyLoad_Wap.WS_MTraffic {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Mtraffic.vn/", ConfigurationName="WS_MTraffic.MTrafficSoap")]
    public interface MTrafficSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mtraffic.vn/Check", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Check(string Signature, int KeywordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mtraffic.vn/Reg", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Reg(int ChannelType, string Signature, int KeywordID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mtraffic.vn/Reg_CMD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Reg_CMD(int ChannelType, string Signature, string CommandCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mtraffic.vn/Dereg_CMD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Dereg_CMD(int ChannelType, string Signature, string CommandCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Mtraffic.vn/GetInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetInfo(string Signature);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MTrafficSoapChannel : MyLoad_Wap.WS_MTraffic.MTrafficSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MTrafficSoapClient : System.ServiceModel.ClientBase<MyLoad_Wap.WS_MTraffic.MTrafficSoap>, MyLoad_Wap.WS_MTraffic.MTrafficSoap {
        
        public MTrafficSoapClient() {
        }
        
        public MTrafficSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MTrafficSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MTrafficSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MTrafficSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Check(string Signature, int KeywordID) {
            return base.Channel.Check(Signature, KeywordID);
        }
        
        public string Reg(int ChannelType, string Signature, int KeywordID) {
            return base.Channel.Reg(ChannelType, Signature, KeywordID);
        }
        
        public string Reg_CMD(int ChannelType, string Signature, string CommandCode) {
            return base.Channel.Reg_CMD(ChannelType, Signature, CommandCode);
        }
        
        public string Dereg_CMD(int ChannelType, string Signature, string CommandCode) {
            return base.Channel.Dereg_CMD(ChannelType, Signature, CommandCode);
        }
        
        public System.Data.DataTable GetInfo(string Signature) {
            return base.Channel.GetInfo(Signature);
        }
    }
}
